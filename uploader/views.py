# uploader/views.py

from django.shortcuts import render
from django.http import HttpResponse, JsonResponse
from django.views.decorators.csrf import ensure_csrf_cookie
from django.middleware.csrf import get_token
from .forms import UploadFileForm
from zipfile import ZipFile
import os
import uuid
from django.conf import settings

def upload_file(request):
    files = []
    if request.method == 'POST':
        form = UploadFileForm(request.POST, request.FILES)
        if form.is_valid():
            uploaded_file = request.FILES['file']

            # Ensure it's a zip file before processing
            if uploaded_file.name.endswith('.zip'):
                # Create a unique directory for each uploaded zip file
                unique_folder_name = str(uuid.uuid4())
                output_dir = os.path.join(settings.MEDIA_ROOT, unique_folder_name)

                # Make sure the directory exists
                os.makedirs(output_dir, exist_ok=True)

                # Extract the zip file to the unique directory
                with ZipFile(uploaded_file, 'r') as zip_ref:
                    zip_ref.extractall(output_dir)

                # List the extracted files for display
                files = os.listdir(output_dir)
            else:
                return HttpResponse("Please upload a valid zip file.")
    else:
        form = UploadFileForm()

    return render(request, 'upload.html', {'form': form, 'files': files})

@ensure_csrf_cookie
def get_csrf_token(request):
    csrf_token = get_token(request)
    return JsonResponse({'csrf_token': csrf_token})
